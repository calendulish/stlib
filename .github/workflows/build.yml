name: Build
on: [push, workflow_dispatch]

jobs:
  delete-old-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 0
  linux-build:
    if: ${{ always() }}
    needs: delete-old-artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install build
      - run: ./tools/Linux/dist_script.sh
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: |
            build/*.zip
            dist/
          if-no-files-found: error
          retention-days: 90
  rpi-build:
    if: ${{ always() }}
    needs: delete-old-artifacts
    runs-on: ubuntu-latest
    name: Build ${{ matrix.arch }} ${{ matrix.python-version }}
    strategy:
      matrix:
        include:
        - arch: 'armv7'
          distro: 'archarm_latest'
        - arch: 'aarch64'
          distro: 'archarm_latest'
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2.2.1
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          setup: mkdir -p "${PWD}/artifacts"
          dockerRunArgs: --volume "${PWD}/artifacts:/artifacts"
          env: |
            release_name: "stlib-RPI-${{ matrix.arch }}"
          shell: /bin/sh
          install: |
            pacman -Syu --noconfirm
            pacman -S --noconfirm python python-build tar
          run: |
            python -m build --sdist --wheel
            pushd build
            mv lib.linux* "${release_name}"
            tar -vvcf "${release_name}.zip" "${release_name}"
            popd
            cp -rfv build/ /artifacts/
            cp -rfv dist/ /artifacts/
      - uses: actions/upload-artifact@v3
        with:
          name: rpi_${{ matrix.arch }}
          path: |
            artifacts/build/*.zip
            artifacts/dist/
          if-no-files-found: error
          retention-days: 90
  windows-build:
    if: ${{ always() }}
    needs: delete-old-artifacts
    runs-on: windows-2022
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    defaults:
      run:
        shell: cmd
        working-directory: .\\tools\Windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install build
      - run: update_dev_environment.cmd
      - run: dist_script.cmd
      - run: dist_script_native.cmd
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: |
            build/*.zip
            dist/
          if-no-files-found: error
          retention-days: 90
  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux-build, rpi-build, windows-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            linux/dist/*.whl
            windows/dist/*.whl
            rpi_aarch64/dist/*.whl
            rpi_armv7l/dist/*.whl
  pypi-upload:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python -m pip install auditwheel
      - run: python ./tools/auditwheel_.py repair --plat manylinux2014_x86_64 linux/dist/stlib-*cp310*.whl
      - run: python ./tools/auditwheel_.py repair --plat manylinux2014_armv7l rpi_armv7l/dist/stlib-*cp310*.whl
      - run: python ./tools/auditwheel_.py repair --plat manylinux2014_aarch64 rpi_aarch64/dist/stlib-*cp310*.whl
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: python -m pip install auditwheel
      - run: python ./tools/auditwheel_.py repair --plat manylinux2014_x86_64 linux/dist/stlib-*cp39*.whl
      - run: mv windows/dist/stlib-*win_amd64.whl wheelhouse/
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: wheelhouse/
          verbose: true
          print_hash: true
  generate-badges:
    if: ${{ always() }}
    needs: [linux-build, rpi-build, windows-build]
    runs-on: ubuntu-latest
    env:
      linux-badge-color: ${{ needs.linux-build.result == 'success' && 'green' || 'red' }}
      windows-badge-color: ${{ needs.windows-build.result == 'success' && 'green' || 'red' }}
      rpi-badge-color: ${{ needs.rpi-build.result == 'success' && 'green' || 'red' }}
    steps:
      - uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: stlib-linux-build
          LABEL: 'Linux build'
          STATUS: ${{ needs.linux-build.result }}
          COLOR: ${{ env.linux-badge-color }}
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          REPOSITORY: ShyPixie/.github
          ACTOR: ShyPixie
      - uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: stlib-rpi-build
          LABEL: 'RPI build'
          STATUS: ${{ needs.rpi-build.result }}
          COLOR: ${{ env.rpi-badge-color }}
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          REPOSITORY: ShyPixie/.github
          ACTOR: ShyPixie
      - uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: stlib-windows-build
          LABEL: 'Windows build'
          STATUS: ${{ needs.windows-build.result }}
          COLOR: ${{ env.windows-badge-color }}
          GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
          REPOSITORY: ShyPixie/.github
          ACTOR: ShyPixie
